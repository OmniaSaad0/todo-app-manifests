{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "todo-app.fullname" . }}-mongodb
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "todo-app.labels" . | nindent 4 }}
    app: mongodb
spec:
  serviceName: {{ include "todo-app.fullname" . }}-mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
        imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: {{ .Values.mongodb.auth.database | quote }}
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.mongodb.auth.rootUsername | quote }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: {{ .Values.mongodb.auth.rootPassword | quote }}
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          {{- toYaml .Values.mongodb.resources | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.mongodb.persistence.size }}
      storageClassName: {{ .Values.mongodb.persistence.storageClass }}
{{- end }} 